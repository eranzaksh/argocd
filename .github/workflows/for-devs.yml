name: Deploy Workflow

on:
  repository_dispatch:
    types: [trigger_lambda]

jobs:
  build:
    runs-on: ubuntu-24.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --name tf-eks --region eu-north-1

      - name: Install Helm
        run: |
          curl -fsSL https://get.helm.sh/helm-v3.11.1-linux-amd64.tar.gz -o helm.tar.gz
          tar -zxvf helm.tar.gz
          sudo mv linux-amd64/helm /usr/local/bin/helm
          helm version

      - name: Install Argo CD CLI
        run: |
          curl -sSL https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64 -o argocd
          chmod +x argocd
          sudo mv argocd /usr/local/bin/
          
      - name: Login to Argo CD
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --insecure
  
      - name: Create Argo CD Application from Helm
        run: |
          echo "Creating Argo CD Application from Helm chart..."
          argocd app create ${{ github.event.client_payload.namespace }} \
            --repo https://github.com/eranzaksh/argocd.git \
            --path weather-helm/eran-app1 \
            --dest-server https://kubernetes.default.svc \
            --dest-namespace ${{ github.event.client_payload.namespace }} \
            --revision HEAD \
            --helm-set image.tag=${{ github.event.client_payload.docker_image_tag }} \
            --helm-set ingress.path="/${{ github.event.client_payload.namespace }}" \
            --sync-policy automated \
            --sync-option CreateNamespace=true

          echo "Argo CD Application created successfully."
